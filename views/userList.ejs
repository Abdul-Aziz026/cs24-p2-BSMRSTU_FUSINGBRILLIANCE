<!-- users.ejs -->

<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>User List</title>
    <style>
      table {
        width: 100%;
        border-collapse: collapse;
        margin-bottom: 20px;
      }
      th,
      td {
        padding: 8px;
        text-align: left;
        border-bottom: 1px solid #ddd;
        text-align: center;
        width: 33%; /* Set each column to occupy 33% of the table width */
      }
      th {
        background-color: aqua;
      }
      .create-user-button {
        padding: 10px 20px;
        background-color: #007bff;
        color: white;
        border: none;
        border-radius: 5px;
        cursor: pointer;
      }
      .create-user-button:hover {
        background-color: #0056b3;
      }
    </style>
  </head>
  <body>
    <h1 style="text-align: center">User List</h1>

    <!-- Add a button to create a new user -->
    <div style="text-align: left; margin-bottom: 20px; padding: 20px">
      <form action="/users/createUser" , method="POST">
        <button class="create-user-button" class="button">Create User</button>
      </form>
    </div>

    <table>
      <thead>
        <tr>
          <th>Name</th>
          <th>Email</th>
          <th>Role</th>
          <th>Action</th>
          <!-- Add a column for the "Details" button -->
        </tr>
      </thead>
      <tbody id="userTableBody">
        <!-- User data will be dynamically inserted here -->
      </tbody>
    </table>

    <script>
      // Function to handle navigation to the specified URL
      function navigateTo(url) {
        window.location.href = url;
      }

      // Function to handle button click event to view user details
      function viewUserDetails(userId) {
        window.location.href = "/users/" + userId;
      }

      // Fetch user data from the server
      function checkUser(roleValue) {
        switch (roleValue) {
          case 0:
            return "System Admin";
          case 1:
            return "STS Manager";
          case 2:
            return "Landfill Manager";
          default:
            return "Unassigned User";
        }
      }
      fetch("/users")
        .then((response) => response.json())
        .then((users) => {
          const userTableBody = document.getElementById("userTableBody");
          users.forEach((user) => {
            const row = document.createElement("tr");
            row.innerHTML = `
                        <td>${user.name}</td>
                        <td>${user.email}</td>
                        <td>${checkUser(user.role)}</td>
                        <td><button onclick="viewUserDetails('${
                          user._id
                        }')">Details</button></td> <!-- Add a button for each user -->
                    `;
            userTableBody.appendChild(row);
          });
        })
        .catch((error) => console.error("Error fetching users:", error));
    </script>
  </body>
</html>
